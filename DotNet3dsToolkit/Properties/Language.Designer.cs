//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.Resources;
using System.Runtime.CompilerServices;

namespace DotNet3dsToolkit.Properties {
	/// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [DebuggerNonUserCode()]
    [CompilerGenerated()]
    public class Language {
        
        private static ResourceManager resourceMan;
        
        private static CultureInfo resourceCulture;
        
        [SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Language() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public static ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    ResourceManager temp = new ResourceManager("DotNet3dsToolkit.Properties.Language", typeof(Language).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public static CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Complete.
        /// </summary>
        public static string Complete {
            get {
                return ResourceManager.GetString("Complete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StepCount cannot be 0..
        /// </summary>
        public static string ErrorAsyncForInfiniteLoop {
            get {
                return ResourceManager.GetString("ErrorAsyncForInfiniteLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Neither file nor directory not found at &quot;{0}&quot;..
        /// </summary>
        public static string ErrorFileDirNotFound {
            get {
                return ResourceManager.GetString("ErrorFileDirNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file format is invalid or unsupported..
        /// </summary>
        public static string ErrorInvalidFileFormat {
            get {
                return ResourceManager.GetString("ErrorInvalidFileFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given path is in an incorrect format: &quot;{0}&quot;.
        /// </summary>
        public static string ErrorInvalidPathFormat {
            get {
                return ResourceManager.GetString("ErrorInvalidPathFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A file required for building is missing: &quot;{0}&quot;.
        /// </summary>
        public static string ErrorMissingFile {
            get {
                return ResourceManager.GetString("ErrorMissingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using GenericFile.Save() requires GenericFile.OriginalFilename to not be null..
        /// </summary>
        public static string ErrorNoSaveFilename {
            get {
                return ResourceManager.GetString("ErrorNoSaveFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File at the given path in the ROM could not be found..
        /// </summary>
        public static string ErrorROMFileNotFound {
            get {
                return ResourceManager.GetString("ErrorROMFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported system format {0}.
        /// </summary>
        public static string ErrorSystemNotSupported {
            get {
                return ResourceManager.GetString("ErrorSystemNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to write to a read-only file..
        /// </summary>
        public static string ErrorWrittenReadonly {
            get {
                return ResourceManager.GetString("ErrorWrittenReadonly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unpacking....
        /// </summary>
        public static string LoadingUnpacking {
            get {
                return ResourceManager.GetString("LoadingUnpacking", resourceCulture);
            }
        }
    }
}
